ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Timer_Channel_Right.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.Timer_Channel_Right_Enable,"ax",%progbits
  19              		.align	2
  20              		.global	Timer_Channel_Right_Enable
  21              		.thumb
  22              		.thumb_func
  23              		.type	Timer_Channel_Right_Enable, %function
  24              	Timer_Channel_Right_Enable:
  25              	.LFB1:
  26              		.file 1 "Generated_Source\\PSoC5\\Timer_Channel_Right.c"
   1:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer_Channel_Right.c **** * File Name: Timer_Channel_Right.c
   3:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Version 2.70
   4:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
   5:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Description:
   6:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
  15:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Note:
  16:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
  17:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer_Channel_Right.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer_Channel_Right.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer_Channel_Right.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  24:Generated_Source\PSoC5/Timer_Channel_Right.c **** #include "Timer_Channel_Right.h"
  25:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  26:Generated_Source\PSoC5/Timer_Channel_Right.c **** uint8 Timer_Channel_Right_initVar = 0u;
  27:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  28:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  29:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_Init
  31:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 2


  32:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
  33:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
  34:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
  36:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
  38:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
  39:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
  40:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
  41:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
  42:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_Init(void) 
  44:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
  45:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if(!Timer_Channel_Right_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer_Channel_Right.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer_Channel_Right.c ****             uint8 Timer_Channel_Right_interruptState;
  48:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  50:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (Timer_Channel_Right_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL &= Timer_Channel_Right_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  54:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer_Channel_Right.c ****             Timer_Channel_Right_CONTROL2 &= ((uint8)(~Timer_Channel_Right_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  59:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer_Channel_Right.c ****             Timer_Channel_Right_CONTROL3 &= ((uint8)(~Timer_Channel_Right_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  63:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (Timer_Channel_Right_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer_Channel_Right.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer_Channel_Right.c ****             Timer_Channel_Right_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  69:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (Timer_Channel_Right_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 Timer_Channel_Right_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  76:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 Timer_Channel_Right_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  82:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  84:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (Timer_Channel_Right_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 Timer_Channel_Right_CONTROL2 |= Timer_Channel_Right_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 3


  89:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  90:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 Timer_Channel_Right_CONTROL3 &= ((uint8)(~Timer_Channel_Right_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 Timer_Channel_Right_CONTROL3 |= Timer_Channel_Right_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  95:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 Timer_Channel_Right_CONTROL3 &= ((uint8)(~Timer_Channel_Right_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 Timer_Channel_Right_CONTROL3 |= Timer_Channel_Right_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
  99:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 Timer_Channel_Right_CONTROL3 |= Timer_Channel_Right_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 103:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 105:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_RT1 &= ((uint8)(~Timer_Channel_Right_RT1_MASK));
 107:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_RT1 |= Timer_Channel_Right_SYNC;
 108:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 109:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_RT1 &= ((uint8)(~Timer_Channel_Right_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_RT1 |= Timer_Channel_Right_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 113:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL2 |= Timer_Channel_Right_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 117:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer_Channel_Right.c ****     Timer_Channel_Right_WritePeriod(Timer_Channel_Right_INIT_PERIOD);
 119:Generated_Source\PSoC5/Timer_Channel_Right.c ****     Timer_Channel_Right_WriteCounter(Timer_Channel_Right_INIT_PERIOD);
 120:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 121:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (Timer_Channel_Right_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CAPTURE_COUNT_CTRL |= Timer_Channel_Right_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_SetCaptureCount(Timer_Channel_Right_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 126:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (Timer_Channel_Right_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer_Channel_Right.c ****             Timer_Channel_Right_SetCaptureMode(Timer_Channel_Right_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 131:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (Timer_Channel_Right_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 if (0u == (Timer_Channel_Right_CONTROL & Timer_Channel_Right__B_TIMER__TM_SOFTWARE)
 134:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 {
 135:Generated_Source\PSoC5/Timer_Channel_Right.c ****                     Timer_Channel_Right_SetTriggerMode(Timer_Channel_Right_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer_Channel_Right.c ****                 }
 137:Generated_Source\PSoC5/Timer_Channel_Right.c ****             #endif /* (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 140:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 144:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_STATUS_AUX_CTRL |= Timer_Channel_Right_STATUS_ACTL_INT_EN_MASK;
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 4


 146:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 147:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer_Channel_Right.c ****         CyExitCriticalSection(Timer_Channel_Right_interruptState);
 149:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 150:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (Timer_Channel_Right_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer_Channel_Right.c ****             Timer_Channel_Right_EnableTrigger();
 152:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer_Channel_Right.c **** 		
 154:Generated_Source\PSoC5/Timer_Channel_Right.c **** 		
 155:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #if (Timer_Channel_Right_InterruptOnCaptureCount && !Timer_Channel_Right_UDB_CONTROL_REG_RE
 156:Generated_Source\PSoC5/Timer_Channel_Right.c ****             Timer_Channel_Right_SetInterruptCount(Timer_Channel_Right_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 159:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_ClearFIFO();
 160:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 162:Generated_Source\PSoC5/Timer_Channel_Right.c ****     Timer_Channel_Right_SetInterruptMode(Timer_Channel_Right_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 164:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 165:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 166:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_Enable
 168:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 170:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 171:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 173:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 175:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 176:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 177:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 178:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 179:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_Enable(void) 
 181:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
  27              		.loc 1 181 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
 182:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (Timer_Channel_Right_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_GLOBAL_ENABLE |= Timer_Channel_Right_BLOCK_EN_MASK;
 185:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_GLOBAL_STBY_ENABLE |= Timer_Channel_Right_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 188:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED || Timer_Channel_Right_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL |= Timer_Channel_Right_CTRL_ENABLE;
  32              		.loc 1 190 0
  33 0000 024A     		ldr	r2, .L2
  34 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  35 0004 43F08003 		orr	r3, r3, #128
  36 0008 1370     		strb	r3, [r2]
  37 000a 7047     		bx	lr
  38              	.L3:
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 5


  39              		.align	2
  40              	.L2:
  41 000c 73640040 		.word	1073767539
  42              		.cfi_endproc
  43              	.LFE1:
  44              		.size	Timer_Channel_Right_Enable, .-Timer_Channel_Right_Enable
  45              		.section	.text.Timer_Channel_Right_Stop,"ax",%progbits
  46              		.align	2
  47              		.global	Timer_Channel_Right_Stop
  48              		.thumb
  49              		.thumb_func
  50              		.type	Timer_Channel_Right_Stop, %function
  51              	Timer_Channel_Right_Stop:
  52              	.LFB3:
 191:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 193:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 194:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 195:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_Start
 197:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 199:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 200:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 204:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 206:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 207:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 208:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 209:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 210:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Timer_Channel_Right_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer_Channel_Right.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 214:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_Start(void) 
 216:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 217:Generated_Source\PSoC5/Timer_Channel_Right.c ****     if(Timer_Channel_Right_initVar == 0u)
 218:Generated_Source\PSoC5/Timer_Channel_Right.c ****     {
 219:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_Init();
 220:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 221:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Timer_Channel_Right.c ****     }
 223:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 224:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer_Channel_Right.c ****     Timer_Channel_Right_Enable();
 226:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 227:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 228:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 229:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_Stop
 231:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 233:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 6


 234:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 237:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 239:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 240:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 241:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 242:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 243:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer_Channel_Right.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 246:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_Stop(void) 
 248:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
  53              		.loc 1 248 0
  54              		.cfi_startproc
  55              		@ args = 0, pretend = 0, frame = 0
  56              		@ frame_needed = 0, uses_anonymous_args = 0
  57              		@ link register save eliminated.
 249:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if(!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED || Timer_Channel_Right_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL &= ((uint8)(~Timer_Channel_Right_CTRL_ENABLE));
  58              		.loc 1 251 0
  59 0000 024A     		ldr	r2, .L5
  60 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  61 0004 03F07F03 		and	r3, r3, #127
  62 0008 1370     		strb	r3, [r2]
  63 000a 7047     		bx	lr
  64              	.L6:
  65              		.align	2
  66              	.L5:
  67 000c 73640040 		.word	1073767539
  68              		.cfi_endproc
  69              	.LFE3:
  70              		.size	Timer_Channel_Right_Stop, .-Timer_Channel_Right_Stop
  71              		.section	.text.Timer_Channel_Right_SetInterruptMode,"ax",%progbits
  72              		.align	2
  73              		.global	Timer_Channel_Right_SetInterruptMode
  74              		.thumb
  75              		.thumb_func
  76              		.type	Timer_Channel_Right_SetInterruptMode, %function
  77              	Timer_Channel_Right_SetInterruptMode:
  78              	.LFB4:
 252:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 254:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (Timer_Channel_Right_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_GLOBAL_ENABLE &= ((uint8)(~Timer_Channel_Right_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_Channel_Right_BLOCK_STBY_EN_MASK)
 258:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 260:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 261:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 262:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_SetInterruptMode
 264:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 7


 265:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 266:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 267:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 271:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer_Channel_Right.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 275:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 276:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 277:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 278:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
  79              		.loc 1 280 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LVL0:
 281:Generated_Source\PSoC5/Timer_Channel_Right.c ****     Timer_Channel_Right_STATUS_MASK = interruptMode;
  85              		.loc 1 281 0
  86 0000 014B     		ldr	r3, .L8
  87 0002 1870     		strb	r0, [r3]
  88 0004 7047     		bx	lr
  89              	.L9:
  90 0006 00BF     		.align	2
  91              	.L8:
  92 0008 87640040 		.word	1073767559
  93              		.cfi_endproc
  94              	.LFE4:
  95              		.size	Timer_Channel_Right_SetInterruptMode, .-Timer_Channel_Right_SetInterruptMode
  96              		.section	.text.Timer_Channel_Right_SoftwareCapture,"ax",%progbits
  97              		.align	2
  98              		.global	Timer_Channel_Right_SoftwareCapture
  99              		.thumb
 100              		.thumb_func
 101              		.type	Timer_Channel_Right_SoftwareCapture, %function
 102              	Timer_Channel_Right_SoftwareCapture:
 103              	.LFB5:
 282:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 283:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 284:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 285:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_SoftwareCapture
 287:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 289:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 290:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 292:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 294:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 295:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 296:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 8


 297:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 298:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 301:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 104              		.loc 1 303 0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if(Timer_Channel_Right_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer_Channel_Right.c ****         (void)CY_GET_REG16(Timer_Channel_Right_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #else
 308:Generated_Source\PSoC5/Timer_Channel_Right.c ****         (void)CY_GET_REG8(Timer_Channel_Right_COUNTER_LSB_PTR_8BIT);
 109              		.loc 1 308 0
 110 0000 014B     		ldr	r3, .L11
 111 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 112 0004 7047     		bx	lr
 113              	.L12:
 114 0006 00BF     		.align	2
 115              	.L11:
 116 0008 06640040 		.word	1073767430
 117              		.cfi_endproc
 118              	.LFE5:
 119              		.size	Timer_Channel_Right_SoftwareCapture, .-Timer_Channel_Right_SoftwareCapture
 120              		.section	.text.Timer_Channel_Right_ReadStatusRegister,"ax",%progbits
 121              		.align	2
 122              		.global	Timer_Channel_Right_ReadStatusRegister
 123              		.thumb
 124              		.thumb_func
 125              		.type	Timer_Channel_Right_ReadStatusRegister, %function
 126              	Timer_Channel_Right_ReadStatusRegister:
 127              	.LFB6:
 309:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif/* (Timer_Channel_Right_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 312:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 313:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 314:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 318:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 319:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 323:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 325:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 326:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 327:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 329:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Side Effects:
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 9


 330:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 332:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer_Channel_Right.c **** uint8   Timer_Channel_Right_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 128              		.loc 1 334 0
 129              		.cfi_startproc
 130              		@ args = 0, pretend = 0, frame = 0
 131              		@ frame_needed = 0, uses_anonymous_args = 0
 132              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Timer_Channel_Right.c ****     return (Timer_Channel_Right_STATUS);
 133              		.loc 1 335 0
 134 0000 014B     		ldr	r3, .L14
 135 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 136              		.loc 1 336 0
 137 0004 7047     		bx	lr
 138              	.L15:
 139 0006 00BF     		.align	2
 140              	.L14:
 141 0008 67640040 		.word	1073767527
 142              		.cfi_endproc
 143              	.LFE6:
 144              		.size	Timer_Channel_Right_ReadStatusRegister, .-Timer_Channel_Right_ReadStatusRegister
 145              		.section	.text.Timer_Channel_Right_ReadControlRegister,"ax",%progbits
 146              		.align	2
 147              		.global	Timer_Channel_Right_ReadControlRegister
 148              		.thumb
 149              		.thumb_func
 150              		.type	Timer_Channel_Right_ReadControlRegister, %function
 151              	Timer_Channel_Right_ReadControlRegister:
 152              	.LFB7:
 337:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 338:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 339:Generated_Source\PSoC5/Timer_Channel_Right.c **** #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 341:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 342:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_ReadControlRegister
 344:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 346:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 347:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 349:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 351:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 352:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 353:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 355:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer_Channel_Right.c **** uint8 Timer_Channel_Right_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 153              		.loc 1 357 0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 0
 156              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 10


 157              		@ link register save eliminated.
 358:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer_Channel_Right.c ****         return ((uint8)Timer_Channel_Right_CONTROL);
 158              		.loc 1 359 0
 159 0000 014B     		ldr	r3, .L17
 160 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 360:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #else
 361:Generated_Source\PSoC5/Timer_Channel_Right.c ****         return (0);
 362:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 161              		.loc 1 363 0
 162 0004 7047     		bx	lr
 163              	.L18:
 164 0006 00BF     		.align	2
 165              	.L17:
 166 0008 73640040 		.word	1073767539
 167              		.cfi_endproc
 168              	.LFE7:
 169              		.size	Timer_Channel_Right_ReadControlRegister, .-Timer_Channel_Right_ReadControlRegister
 170              		.section	.text.Timer_Channel_Right_WriteControlRegister,"ax",%progbits
 171              		.align	2
 172              		.global	Timer_Channel_Right_WriteControlRegister
 173              		.thumb
 174              		.thumb_func
 175              		.type	Timer_Channel_Right_WriteControlRegister, %function
 176              	Timer_Channel_Right_WriteControlRegister:
 177              	.LFB8:
 364:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 365:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 366:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_WriteControlRegister
 368:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 370:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 371:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 373:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 376:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 377:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 378:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 178              		.loc 1 380 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 183              	.LVL1:
 381:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL = control;
 184              		.loc 1 382 0
 185 0000 014B     		ldr	r3, .L20
 186 0002 1870     		strb	r0, [r3]
 187 0004 7047     		bx	lr
 188              	.L21:
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 11


 189 0006 00BF     		.align	2
 190              	.L20:
 191 0008 73640040 		.word	1073767539
 192              		.cfi_endproc
 193              	.LFE8:
 194              		.size	Timer_Channel_Right_WriteControlRegister, .-Timer_Channel_Right_WriteControlRegister
 195              		.section	.text.Timer_Channel_Right_ReadPeriod,"ax",%progbits
 196              		.align	2
 197              		.global	Timer_Channel_Right_ReadPeriod
 198              		.thumb
 199              		.thumb_func
 200              		.type	Timer_Channel_Right_ReadPeriod, %function
 201              	Timer_Channel_Right_ReadPeriod:
 202              	.LFB9:
 383:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #else
 384:Generated_Source\PSoC5/Timer_Channel_Right.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 387:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 388:Generated_Source\PSoC5/Timer_Channel_Right.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 390:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 391:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_ReadPeriod
 393:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 395:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 396:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 398:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 400:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 401:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 402:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 404:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer_Channel_Right.c **** uint16 Timer_Channel_Right_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 203              		.loc 1 406 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 0
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Timer_Channel_Right.c ****    #if(Timer_Channel_Right_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer_Channel_Right.c ****        return ((uint16)CY_GET_REG16(Timer_Channel_Right_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer_Channel_Right.c ****    #else
 410:Generated_Source\PSoC5/Timer_Channel_Right.c ****        return (CY_GET_REG16(Timer_Channel_Right_PERIOD_LSB_PTR));
 208              		.loc 1 410 0
 209 0000 014B     		ldr	r3, .L23
 210 0002 1888     		ldrh	r0, [r3]
 411:Generated_Source\PSoC5/Timer_Channel_Right.c ****    #endif /* (Timer_Channel_Right_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 211              		.loc 1 412 0
 212 0004 80B2     		uxth	r0, r0
 213 0006 7047     		bx	lr
 214              	.L24:
 215              		.align	2
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 12


 216              	.L23:
 217 0008 4C680040 		.word	1073768524
 218              		.cfi_endproc
 219              	.LFE9:
 220              		.size	Timer_Channel_Right_ReadPeriod, .-Timer_Channel_Right_ReadPeriod
 221              		.section	.text.Timer_Channel_Right_WritePeriod,"ax",%progbits
 222              		.align	2
 223              		.global	Timer_Channel_Right_WritePeriod
 224              		.thumb
 225              		.thumb_func
 226              		.type	Timer_Channel_Right_WritePeriod, %function
 227              	Timer_Channel_Right_WritePeriod:
 228              	.LFB10:
 413:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 414:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 415:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_WritePeriod
 417:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 419:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 420:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 423:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer_Channel_Right.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 427:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 428:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 429:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 430:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_WritePeriod(uint16 period) 
 432:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 229              		.loc 1 432 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 0
 232              		@ frame_needed = 0, uses_anonymous_args = 0
 233              		@ link register save eliminated.
 234              	.LVL2:
 433:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if(Timer_Channel_Right_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer_Channel_Right.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer_Channel_Right.c ****         CY_SET_REG16(Timer_Channel_Right_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #else
 437:Generated_Source\PSoC5/Timer_Channel_Right.c ****         CY_SET_REG16(Timer_Channel_Right_PERIOD_LSB_PTR, period);
 235              		.loc 1 437 0
 236 0000 014B     		ldr	r3, .L26
 237 0002 1880     		strh	r0, [r3]	@ movhi
 238 0004 7047     		bx	lr
 239              	.L27:
 240 0006 00BF     		.align	2
 241              	.L26:
 242 0008 4C680040 		.word	1073768524
 243              		.cfi_endproc
 244              	.LFE10:
 245              		.size	Timer_Channel_Right_WritePeriod, .-Timer_Channel_Right_WritePeriod
 246              		.section	.text.Timer_Channel_Right_ReadCapture,"ax",%progbits
 247              		.align	2
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 13


 248              		.global	Timer_Channel_Right_ReadCapture
 249              		.thumb
 250              		.thumb_func
 251              		.type	Timer_Channel_Right_ReadCapture, %function
 252              	Timer_Channel_Right_ReadCapture:
 253              	.LFB11:
 438:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 440:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 441:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 442:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 443:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_ReadCapture
 444:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 446:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 447:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 449:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 451:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 452:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 453:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 455:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer_Channel_Right.c **** uint16 Timer_Channel_Right_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 254              		.loc 1 457 0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Timer_Channel_Right.c ****    #if(Timer_Channel_Right_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer_Channel_Right.c ****        return ((uint16)CY_GET_REG16(Timer_Channel_Right_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer_Channel_Right.c ****    #else
 461:Generated_Source\PSoC5/Timer_Channel_Right.c ****        return (CY_GET_REG16(Timer_Channel_Right_CAPTURE_LSB_PTR));
 259              		.loc 1 461 0
 260 0000 014B     		ldr	r3, .L29
 261 0002 1888     		ldrh	r0, [r3]
 462:Generated_Source\PSoC5/Timer_Channel_Right.c ****    #endif /* (Timer_Channel_Right_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 262              		.loc 1 463 0
 263 0004 80B2     		uxth	r0, r0
 264 0006 7047     		bx	lr
 265              	.L30:
 266              		.align	2
 267              	.L29:
 268 0008 8C680040 		.word	1073768588
 269              		.cfi_endproc
 270              	.LFE11:
 271              		.size	Timer_Channel_Right_ReadCapture, .-Timer_Channel_Right_ReadCapture
 272              		.section	.text.Timer_Channel_Right_WriteCounter,"ax",%progbits
 273              		.align	2
 274              		.global	Timer_Channel_Right_WriteCounter
 275              		.thumb
 276              		.thumb_func
 277              		.type	Timer_Channel_Right_WriteCounter, %function
 278              	Timer_Channel_Right_WriteCounter:
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 14


 279              	.LFB12:
 464:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 465:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 466:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_WriteCounter
 468:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 470:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 471:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 473:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 476:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 477:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 478:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 479:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_WriteCounter(uint16 counter) 
 481:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 280              		.loc 1 481 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
 285              	.LVL3:
 482:Generated_Source\PSoC5/Timer_Channel_Right.c ****    #if(Timer_Channel_Right_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer_Channel_Right.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer_Channel_Right.c ****          */
 486:Generated_Source\PSoC5/Timer_Channel_Right.c ****         CY_SET_REG16(Timer_Channel_Right_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer_Channel_Right.c ****         
 488:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #else
 489:Generated_Source\PSoC5/Timer_Channel_Right.c ****         CY_SET_REG16(Timer_Channel_Right_COUNTER_LSB_PTR, counter);
 286              		.loc 1 489 0
 287 0000 014B     		ldr	r3, .L32
 288 0002 1880     		strh	r0, [r3]	@ movhi
 289 0004 7047     		bx	lr
 290              	.L33:
 291 0006 00BF     		.align	2
 292              	.L32:
 293 0008 0C680040 		.word	1073768460
 294              		.cfi_endproc
 295              	.LFE12:
 296              		.size	Timer_Channel_Right_WriteCounter, .-Timer_Channel_Right_WriteCounter
 297              		.section	.text.Timer_Channel_Right_ReadCounter,"ax",%progbits
 298              		.align	2
 299              		.global	Timer_Channel_Right_ReadCounter
 300              		.thumb
 301              		.thumb_func
 302              		.type	Timer_Channel_Right_ReadCounter, %function
 303              	Timer_Channel_Right_ReadCounter:
 304              	.LFB13:
 490:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 492:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 493:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 494:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 15


 495:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_ReadCounter
 496:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 498:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 499:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 501:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 503:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 504:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 505:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 507:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer_Channel_Right.c **** uint16 Timer_Channel_Right_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 305              		.loc 1 509 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if(Timer_Channel_Right_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer_Channel_Right.c ****         (void)CY_GET_REG16(Timer_Channel_Right_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #else
 516:Generated_Source\PSoC5/Timer_Channel_Right.c ****         (void)CY_GET_REG8(Timer_Channel_Right_COUNTER_LSB_PTR_8BIT);
 310              		.loc 1 516 0
 311 0000 024B     		ldr	r3, .L35
 312 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif/* (Timer_Channel_Right_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 519:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if(Timer_Channel_Right_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer_Channel_Right.c ****         return ((uint16)CY_GET_REG16(Timer_Channel_Right_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #else
 523:Generated_Source\PSoC5/Timer_Channel_Right.c ****         return (CY_GET_REG16(Timer_Channel_Right_CAPTURE_LSB_PTR));
 313              		.loc 1 523 0
 314 0004 024B     		ldr	r3, .L35+4
 315 0006 1888     		ldrh	r0, [r3]
 524:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* (Timer_Channel_Right_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 316              		.loc 1 525 0
 317 0008 80B2     		uxth	r0, r0
 318 000a 7047     		bx	lr
 319              	.L36:
 320              		.align	2
 321              	.L35:
 322 000c 06640040 		.word	1073767430
 323 0010 8C680040 		.word	1073768588
 324              		.cfi_endproc
 325              	.LFE13:
 326              		.size	Timer_Channel_Right_ReadCounter, .-Timer_Channel_Right_ReadCounter
 327              		.section	.text.Timer_Channel_Right_SetInterruptCount,"ax",%progbits
 328              		.align	2
 329              		.global	Timer_Channel_Right_SetInterruptCount
 330              		.thumb
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 16


 331              		.thumb_func
 332              		.type	Timer_Channel_Right_SetInterruptCount, %function
 333              	Timer_Channel_Right_SetInterruptCount:
 334              	.LFB14:
 526:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 527:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 528:Generated_Source\PSoC5/Timer_Channel_Right.c **** #if(!Timer_Channel_Right_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 530:Generated_Source\PSoC5/Timer_Channel_Right.c ****     
 531:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Timer_Channel_Right.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer_Channel_Right.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer_Channel_Right.c ****  ******************************************************************************/
 535:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 536:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 537:Generated_Source\PSoC5/Timer_Channel_Right.c **** #if (Timer_Channel_Right_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 539:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 540:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_SetCaptureMode
 542:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 544:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 545:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 547:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  #define Timer_Channel_Right__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer_Channel_Right.c **** #define Timer_Channel_Right__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer_Channel_Right.c **** #define Timer_Channel_Right__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer_Channel_Right.c **** #define Timer_Channel_Right__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer_Channel_Right.c **** #define Timer_Channel_Right__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer_Channel_Right.c ****  identifiers
 556:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Timer_Channel_Right__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Timer_Channel_Right__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Timer_Channel_Right__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Timer_Channel_Right__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 562:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 563:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 564:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 565:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 568:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer_Channel_Right.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_Channel_Right_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Timer_Channel_Right.c ****     captureMode &= (Timer_Channel_Right_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 572:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL &= ((uint8)(~Timer_Channel_Right_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 576:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED) */
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 17


 579:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 580:Generated_Source\PSoC5/Timer_Channel_Right.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 582:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 583:Generated_Source\PSoC5/Timer_Channel_Right.c **** #if (Timer_Channel_Right_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 585:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 586:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_SetTriggerMode
 588:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 590:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 591:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 593:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #define Timer_Channel_Right__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #define Timer_Channel_Right__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #define Timer_Channel_Right__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #define Timer_Channel_Right__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #define Timer_Channel_Right__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 601:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 602:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 603:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 604:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 607:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer_Channel_Right.c ****     triggerMode &= Timer_Channel_Right_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 610:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register i
 611:Generated_Source\PSoC5/Timer_Channel_Right.c ****     
 612:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL &= ((uint8)(~Timer_Channel_Right_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 615:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL |= (triggerMode | Timer_Channel_Right__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 619:Generated_Source\PSoC5/Timer_Channel_Right.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 621:Generated_Source\PSoC5/Timer_Channel_Right.c **** #if (Timer_Channel_Right_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 623:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 624:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_EnableTrigger
 626:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 628:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 629:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 631:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 633:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 634:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 635:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 18


 636:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 637:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 640:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register i
 641:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL |= Timer_Channel_Right_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 644:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 645:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 646:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_DisableTrigger
 648:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 649:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 650:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 651:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 653:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 655:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 656:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 657:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 658:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 659:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 662:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register 
 663:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL &= ((uint8)(~Timer_Channel_Right_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 666:Generated_Source\PSoC5/Timer_Channel_Right.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 668:Generated_Source\PSoC5/Timer_Channel_Right.c **** #if(Timer_Channel_Right_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 670:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 671:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_SetInterruptCount
 673:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 675:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 676:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 678:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer_Channel_Right.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Timer_Channel_Right.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer_Channel_Right.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 684:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 685:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 686:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 687:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 335              		.loc 1 689 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 19


 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340              	.LVL4:
 690:Generated_Source\PSoC5/Timer_Channel_Right.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Timer_Channel_Right.c ****     interruptCount &= Timer_Channel_Right_CTRL_INTCNT_MASK;
 341              		.loc 1 691 0
 342 0000 00F00300 		and	r0, r0, #3
 343              	.LVL5:
 692:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 693:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL &= ((uint8)(~Timer_Channel_Right_CTRL_INTCNT_MASK));
 344              		.loc 1 695 0
 345 0004 044B     		ldr	r3, .L38
 346 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 347 0008 02F0FC02 		and	r2, r2, #252
 348 000c 1A70     		strb	r2, [r3]
 696:Generated_Source\PSoC5/Timer_Channel_Right.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer_Channel_Right.c ****         Timer_Channel_Right_CONTROL |= interruptCount;
 349              		.loc 1 697 0
 350 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 351 0010 1043     		orrs	r0, r0, r2
 352              	.LVL6:
 353 0012 1870     		strb	r0, [r3]
 354 0014 7047     		bx	lr
 355              	.L39:
 356 0016 00BF     		.align	2
 357              	.L38:
 358 0018 73640040 		.word	1073767539
 359              		.cfi_endproc
 360              	.LFE14:
 361              		.size	Timer_Channel_Right_SetInterruptCount, .-Timer_Channel_Right_SetInterruptCount
 362              		.section	.text.Timer_Channel_Right_ClearFIFO,"ax",%progbits
 363              		.align	2
 364              		.global	Timer_Channel_Right_ClearFIFO
 365              		.thumb
 366              		.thumb_func
 367              		.type	Timer_Channel_Right_ClearFIFO, %function
 368              	Timer_Channel_Right_ClearFIFO:
 369              	.LFB15:
 698:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* (!Timer_Channel_Right_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 700:Generated_Source\PSoC5/Timer_Channel_Right.c **** #endif /* Timer_Channel_Right_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 702:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 703:Generated_Source\PSoC5/Timer_Channel_Right.c **** #if (Timer_Channel_Right_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 705:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 706:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_SetCaptureCount
 708:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 710:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 711:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 713:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 20


 715:Generated_Source\PSoC5/Timer_Channel_Right.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer_Channel_Right.c **** *                captures.
 717:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 718:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 719:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 720:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 721:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 724:Generated_Source\PSoC5/Timer_Channel_Right.c ****     Timer_Channel_Right_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 726:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 727:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 728:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 732:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 733:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 735:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 737:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 738:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 739:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 741:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Timer_Channel_Right.c **** uint8 Timer_Channel_Right_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 744:Generated_Source\PSoC5/Timer_Channel_Right.c ****     return ((uint8)Timer_Channel_Right_CAP_COUNT);
 745:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 746:Generated_Source\PSoC5/Timer_Channel_Right.c **** #endif /* Timer_Channel_Right_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 748:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 749:Generated_Source\PSoC5/Timer_Channel_Right.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Function Name: Timer_Channel_Right_ClearFIFO
 751:Generated_Source\PSoC5/Timer_Channel_Right.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 753:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Summary:
 754:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 756:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 758:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 759:Generated_Source\PSoC5/Timer_Channel_Right.c **** * Return:
 760:Generated_Source\PSoC5/Timer_Channel_Right.c **** *  void
 761:Generated_Source\PSoC5/Timer_Channel_Right.c **** *
 762:Generated_Source\PSoC5/Timer_Channel_Right.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer_Channel_Right.c **** void Timer_Channel_Right_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer_Channel_Right.c **** {
 370              		.loc 1 764 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 08B5     		push	{r3, lr}
 375              		.cfi_def_cfa_offset 8
 376              		.cfi_offset 3, -8
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 21


 377              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/Timer_Channel_Right.c ****     while(0u != (Timer_Channel_Right_ReadStatusRegister() & Timer_Channel_Right_STATUS_FIFONEMP))
 378              		.loc 1 765 0
 379 0002 01E0     		b	.L41
 380              	.L42:
 766:Generated_Source\PSoC5/Timer_Channel_Right.c ****     {
 767:Generated_Source\PSoC5/Timer_Channel_Right.c ****         (void)Timer_Channel_Right_ReadCapture();
 381              		.loc 1 767 0
 382 0004 FFF7FEFF 		bl	Timer_Channel_Right_ReadCapture
 383              	.LVL7:
 384              	.L41:
 765:Generated_Source\PSoC5/Timer_Channel_Right.c ****     while(0u != (Timer_Channel_Right_ReadStatusRegister() & Timer_Channel_Right_STATUS_FIFONEMP))
 385              		.loc 1 765 0
 386 0008 FFF7FEFF 		bl	Timer_Channel_Right_ReadStatusRegister
 387              	.LVL8:
 388 000c 10F0080F 		tst	r0, #8
 389 0010 F8D1     		bne	.L42
 768:Generated_Source\PSoC5/Timer_Channel_Right.c ****     }
 769:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 390              		.loc 1 769 0
 391 0012 08BD     		pop	{r3, pc}
 392              		.cfi_endproc
 393              	.LFE15:
 394              		.size	Timer_Channel_Right_ClearFIFO, .-Timer_Channel_Right_ClearFIFO
 395              		.section	.text.Timer_Channel_Right_Init,"ax",%progbits
 396              		.align	2
 397              		.global	Timer_Channel_Right_Init
 398              		.thumb
 399              		.thumb_func
 400              		.type	Timer_Channel_Right_Init, %function
 401              	Timer_Channel_Right_Init:
 402              	.LFB0:
  44:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #if(!Timer_Channel_Right_UsingFixedFunction)
 403              		.loc 1 44 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 08B5     		push	{r3, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 3, -8
 410              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/Timer_Channel_Right.c ****     Timer_Channel_Right_WriteCounter(Timer_Channel_Right_INIT_PERIOD);
 411              		.loc 1 118 0
 412 0002 4FF6FF70 		movw	r0, #65535
 413 0006 FFF7FEFF 		bl	Timer_Channel_Right_WritePeriod
 414              	.LVL9:
 119:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 415              		.loc 1 119 0
 416 000a 4FF6FF70 		movw	r0, #65535
 417 000e FFF7FEFF 		bl	Timer_Channel_Right_WriteCounter
 418              	.LVL10:
 142:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 419              		.loc 1 142 0
 420 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 421              	.LVL11:
 145:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 422              		.loc 1 145 0
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 22


 423 0016 084A     		ldr	r2, .L46
 424 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 425 001a 43F01003 		orr	r3, r3, #16
 426 001e 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 427              		.loc 1 148 0
 428 0020 FFF7FEFF 		bl	CyExitCriticalSection
 429              	.LVL12:
 156:Generated_Source\PSoC5/Timer_Channel_Right.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 430              		.loc 1 156 0
 431 0024 0020     		movs	r0, #0
 432 0026 FFF7FEFF 		bl	Timer_Channel_Right_SetInterruptCount
 433              	.LVL13:
 159:Generated_Source\PSoC5/Timer_Channel_Right.c ****     #endif /* Configure additional features of UDB implementation */
 434              		.loc 1 159 0
 435 002a FFF7FEFF 		bl	Timer_Channel_Right_ClearFIFO
 436              	.LVL14:
 162:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 437              		.loc 1 162 0
 438 002e 0220     		movs	r0, #2
 439 0030 FFF7FEFF 		bl	Timer_Channel_Right_SetInterruptMode
 440              	.LVL15:
 441 0034 08BD     		pop	{r3, pc}
 442              	.L47:
 443 0036 00BF     		.align	2
 444              	.L46:
 445 0038 97640040 		.word	1073767575
 446              		.cfi_endproc
 447              	.LFE0:
 448              		.size	Timer_Channel_Right_Init, .-Timer_Channel_Right_Init
 449              		.section	.text.Timer_Channel_Right_Start,"ax",%progbits
 450              		.align	2
 451              		.global	Timer_Channel_Right_Start
 452              		.thumb
 453              		.thumb_func
 454              		.type	Timer_Channel_Right_Start, %function
 455              	Timer_Channel_Right_Start:
 456              	.LFB2:
 216:Generated_Source\PSoC5/Timer_Channel_Right.c ****     if(Timer_Channel_Right_initVar == 0u)
 457              		.loc 1 216 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 0, uses_anonymous_args = 0
 461 0000 08B5     		push	{r3, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 3, -8
 464              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Timer_Channel_Right.c ****     {
 465              		.loc 1 217 0
 466 0002 054B     		ldr	r3, .L51
 467 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 468 0006 23B9     		cbnz	r3, .L49
 219:Generated_Source\PSoC5/Timer_Channel_Right.c **** 
 469              		.loc 1 219 0
 470 0008 FFF7FEFF 		bl	Timer_Channel_Right_Init
 471              	.LVL16:
 221:Generated_Source\PSoC5/Timer_Channel_Right.c ****     }
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 23


 472              		.loc 1 221 0
 473 000c 0122     		movs	r2, #1
 474 000e 024B     		ldr	r3, .L51
 475 0010 1A70     		strb	r2, [r3]
 476              	.L49:
 225:Generated_Source\PSoC5/Timer_Channel_Right.c **** }
 477              		.loc 1 225 0
 478 0012 FFF7FEFF 		bl	Timer_Channel_Right_Enable
 479              	.LVL17:
 480 0016 08BD     		pop	{r3, pc}
 481              	.L52:
 482              		.align	2
 483              	.L51:
 484 0018 00000000 		.word	.LANCHOR0
 485              		.cfi_endproc
 486              	.LFE2:
 487              		.size	Timer_Channel_Right_Start, .-Timer_Channel_Right_Start
 488              		.global	Timer_Channel_Right_initVar
 489              		.bss
 490              		.set	.LANCHOR0,. + 0
 491              		.type	Timer_Channel_Right_initVar, %object
 492              		.size	Timer_Channel_Right_initVar, 1
 493              	Timer_Channel_Right_initVar:
 494 0000 00       		.space	1
 495              		.text
 496              	.Letext0:
 497              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 498              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 499              		.section	.debug_info,"",%progbits
 500              	.Ldebug_info0:
 501 0000 1F030000 		.4byte	0x31f
 502 0004 0400     		.2byte	0x4
 503 0006 00000000 		.4byte	.Ldebug_abbrev0
 504 000a 04       		.byte	0x4
 505 000b 01       		.uleb128 0x1
 506 000c F6010000 		.4byte	.LASF38
 507 0010 01       		.byte	0x1
 508 0011 E4000000 		.4byte	.LASF39
 509 0015 D8020000 		.4byte	.LASF40
 510 0019 00000000 		.4byte	.Ldebug_ranges0+0
 511 001d 00000000 		.4byte	0
 512 0021 00000000 		.4byte	.Ldebug_line0
 513 0025 02       		.uleb128 0x2
 514 0026 01       		.byte	0x1
 515 0027 06       		.byte	0x6
 516 0028 EA030000 		.4byte	.LASF0
 517 002c 02       		.uleb128 0x2
 518 002d 01       		.byte	0x1
 519 002e 08       		.byte	0x8
 520 002f 11010000 		.4byte	.LASF1
 521 0033 02       		.uleb128 0x2
 522 0034 02       		.byte	0x2
 523 0035 05       		.byte	0x5
 524 0036 8E030000 		.4byte	.LASF2
 525 003a 02       		.uleb128 0x2
 526 003b 02       		.byte	0x2
 527 003c 07       		.byte	0x7
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 24


 528 003d 0D000000 		.4byte	.LASF3
 529 0041 02       		.uleb128 0x2
 530 0042 04       		.byte	0x4
 531 0043 05       		.byte	0x5
 532 0044 DC030000 		.4byte	.LASF4
 533 0048 02       		.uleb128 0x2
 534 0049 04       		.byte	0x4
 535 004a 07       		.byte	0x7
 536 004b 24010000 		.4byte	.LASF5
 537 004f 02       		.uleb128 0x2
 538 0050 08       		.byte	0x8
 539 0051 05       		.byte	0x5
 540 0052 59030000 		.4byte	.LASF6
 541 0056 02       		.uleb128 0x2
 542 0057 08       		.byte	0x8
 543 0058 07       		.byte	0x7
 544 0059 A9000000 		.4byte	.LASF7
 545 005d 03       		.uleb128 0x3
 546 005e 04       		.byte	0x4
 547 005f 05       		.byte	0x5
 548 0060 696E7400 		.ascii	"int\000"
 549 0064 02       		.uleb128 0x2
 550 0065 04       		.byte	0x4
 551 0066 07       		.byte	0x7
 552 0067 9B020000 		.4byte	.LASF8
 553 006b 04       		.uleb128 0x4
 554 006c 36010000 		.4byte	.LASF9
 555 0070 02       		.byte	0x2
 556 0071 9201     		.2byte	0x192
 557 0073 2C000000 		.4byte	0x2c
 558 0077 04       		.uleb128 0x4
 559 0078 C7010000 		.4byte	.LASF10
 560 007c 02       		.byte	0x2
 561 007d 9301     		.2byte	0x193
 562 007f 3A000000 		.4byte	0x3a
 563 0083 02       		.uleb128 0x2
 564 0084 04       		.byte	0x4
 565 0085 04       		.byte	0x4
 566 0086 9B000000 		.4byte	.LASF11
 567 008a 02       		.uleb128 0x2
 568 008b 08       		.byte	0x8
 569 008c 04       		.byte	0x4
 570 008d A0010000 		.4byte	.LASF12
 571 0091 02       		.uleb128 0x2
 572 0092 01       		.byte	0x1
 573 0093 08       		.byte	0x8
 574 0094 E5030000 		.4byte	.LASF13
 575 0098 04       		.uleb128 0x4
 576 0099 1F010000 		.4byte	.LASF14
 577 009d 02       		.byte	0x2
 578 009e 3C02     		.2byte	0x23c
 579 00a0 A4000000 		.4byte	0xa4
 580 00a4 05       		.uleb128 0x5
 581 00a5 6B000000 		.4byte	0x6b
 582 00a9 04       		.uleb128 0x4
 583 00aa 00000000 		.4byte	.LASF15
 584 00ae 02       		.byte	0x2
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 25


 585 00af 3D02     		.2byte	0x23d
 586 00b1 B5000000 		.4byte	0xb5
 587 00b5 05       		.uleb128 0x5
 588 00b6 77000000 		.4byte	0x77
 589 00ba 02       		.uleb128 0x2
 590 00bb 04       		.byte	0x4
 591 00bc 07       		.byte	0x7
 592 00bd 31030000 		.4byte	.LASF16
 593 00c1 06       		.uleb128 0x6
 594 00c2 3C040000 		.4byte	.LASF17
 595 00c6 01       		.byte	0x1
 596 00c7 B4       		.byte	0xb4
 597 00c8 00000000 		.4byte	.LFB1
 598 00cc 10000000 		.4byte	.LFE1-.LFB1
 599 00d0 01       		.uleb128 0x1
 600 00d1 9C       		.byte	0x9c
 601 00d2 06       		.uleb128 0x6
 602 00d3 67030000 		.4byte	.LASF18
 603 00d7 01       		.byte	0x1
 604 00d8 F7       		.byte	0xf7
 605 00d9 00000000 		.4byte	.LFB3
 606 00dd 10000000 		.4byte	.LFE3-.LFB3
 607 00e1 01       		.uleb128 0x1
 608 00e2 9C       		.byte	0x9c
 609 00e3 07       		.uleb128 0x7
 610 00e4 20000000 		.4byte	.LASF22
 611 00e8 01       		.byte	0x1
 612 00e9 1701     		.2byte	0x117
 613 00eb 00000000 		.4byte	.LFB4
 614 00ef 0C000000 		.4byte	.LFE4-.LFB4
 615 00f3 01       		.uleb128 0x1
 616 00f4 9C       		.byte	0x9c
 617 00f5 08010000 		.4byte	0x108
 618 00f9 08       		.uleb128 0x8
 619 00fa 80030000 		.4byte	.LASF24
 620 00fe 01       		.byte	0x1
 621 00ff 1701     		.2byte	0x117
 622 0101 6B000000 		.4byte	0x6b
 623 0105 01       		.uleb128 0x1
 624 0106 50       		.byte	0x50
 625 0107 00       		.byte	0
 626 0108 09       		.uleb128 0x9
 627 0109 C0000000 		.4byte	.LASF19
 628 010d 01       		.byte	0x1
 629 010e 2E01     		.2byte	0x12e
 630 0110 00000000 		.4byte	.LFB5
 631 0114 0C000000 		.4byte	.LFE5-.LFB5
 632 0118 01       		.uleb128 0x1
 633 0119 9C       		.byte	0x9c
 634 011a 0A       		.uleb128 0xa
 635 011b 79010000 		.4byte	.LASF20
 636 011f 01       		.byte	0x1
 637 0120 4D01     		.2byte	0x14d
 638 0122 6B000000 		.4byte	0x6b
 639 0126 00000000 		.4byte	.LFB6
 640 012a 0C000000 		.4byte	.LFE6-.LFB6
 641 012e 01       		.uleb128 0x1
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 26


 642 012f 9C       		.byte	0x9c
 643 0130 0A       		.uleb128 0xa
 644 0131 CE010000 		.4byte	.LASF21
 645 0135 01       		.byte	0x1
 646 0136 6401     		.2byte	0x164
 647 0138 6B000000 		.4byte	0x6b
 648 013c 00000000 		.4byte	.LFB7
 649 0140 0C000000 		.4byte	.LFE7-.LFB7
 650 0144 01       		.uleb128 0x1
 651 0145 9C       		.byte	0x9c
 652 0146 07       		.uleb128 0x7
 653 0147 63000000 		.4byte	.LASF23
 654 014b 01       		.byte	0x1
 655 014c 7B01     		.2byte	0x17b
 656 014e 00000000 		.4byte	.LFB8
 657 0152 0C000000 		.4byte	.LFE8-.LFB8
 658 0156 01       		.uleb128 0x1
 659 0157 9C       		.byte	0x9c
 660 0158 6B010000 		.4byte	0x16b
 661 015c 08       		.uleb128 0x8
 662 015d 3C010000 		.4byte	.LASF25
 663 0161 01       		.byte	0x1
 664 0162 7B01     		.2byte	0x17b
 665 0164 6B000000 		.4byte	0x6b
 666 0168 01       		.uleb128 0x1
 667 0169 50       		.byte	0x50
 668 016a 00       		.byte	0
 669 016b 0A       		.uleb128 0xa
 670 016c 3A030000 		.4byte	.LASF26
 671 0170 01       		.byte	0x1
 672 0171 9501     		.2byte	0x195
 673 0173 77000000 		.4byte	0x77
 674 0177 00000000 		.4byte	.LFB9
 675 017b 0C000000 		.4byte	.LFE9-.LFB9
 676 017f 01       		.uleb128 0x1
 677 0180 9C       		.byte	0x9c
 678 0181 07       		.uleb128 0x7
 679 0182 57040000 		.4byte	.LASF27
 680 0186 01       		.byte	0x1
 681 0187 AF01     		.2byte	0x1af
 682 0189 00000000 		.4byte	.LFB10
 683 018d 0C000000 		.4byte	.LFE10-.LFB10
 684 0191 01       		.uleb128 0x1
 685 0192 9C       		.byte	0x9c
 686 0193 A6010000 		.4byte	0x1a6
 687 0197 08       		.uleb128 0x8
 688 0198 06000000 		.4byte	.LASF28
 689 019c 01       		.byte	0x1
 690 019d AF01     		.2byte	0x1af
 691 019f 77000000 		.4byte	0x77
 692 01a3 01       		.uleb128 0x1
 693 01a4 50       		.byte	0x50
 694 01a5 00       		.byte	0
 695 01a6 0A       		.uleb128 0xa
 696 01a7 A7010000 		.4byte	.LASF29
 697 01ab 01       		.byte	0x1
 698 01ac C801     		.2byte	0x1c8
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 27


 699 01ae 77000000 		.4byte	0x77
 700 01b2 00000000 		.4byte	.LFB11
 701 01b6 0C000000 		.4byte	.LFE11-.LFB11
 702 01ba 01       		.uleb128 0x1
 703 01bb 9C       		.byte	0x9c
 704 01bc 07       		.uleb128 0x7
 705 01bd 98030000 		.4byte	.LASF30
 706 01c1 01       		.byte	0x1
 707 01c2 E001     		.2byte	0x1e0
 708 01c4 00000000 		.4byte	.LFB12
 709 01c8 0C000000 		.4byte	.LFE12-.LFB12
 710 01cc 01       		.uleb128 0x1
 711 01cd 9C       		.byte	0x9c
 712 01ce E1010000 		.4byte	0x1e1
 713 01d2 08       		.uleb128 0x8
 714 01d3 A1000000 		.4byte	.LASF31
 715 01d7 01       		.byte	0x1
 716 01d8 E001     		.2byte	0x1e0
 717 01da 77000000 		.4byte	0x77
 718 01de 01       		.uleb128 0x1
 719 01df 50       		.byte	0x50
 720 01e0 00       		.byte	0
 721 01e1 0A       		.uleb128 0xa
 722 01e2 1C040000 		.4byte	.LASF32
 723 01e6 01       		.byte	0x1
 724 01e7 FC01     		.2byte	0x1fc
 725 01e9 77000000 		.4byte	0x77
 726 01ed 00000000 		.4byte	.LFB13
 727 01f1 14000000 		.4byte	.LFE13-.LFB13
 728 01f5 01       		.uleb128 0x1
 729 01f6 9C       		.byte	0x9c
 730 01f7 07       		.uleb128 0x7
 731 01f8 F6030000 		.4byte	.LASF33
 732 01fc 01       		.byte	0x1
 733 01fd B002     		.2byte	0x2b0
 734 01ff 00000000 		.4byte	.LFB14
 735 0203 1C000000 		.4byte	.LFE14-.LFB14
 736 0207 01       		.uleb128 0x1
 737 0208 9C       		.byte	0x9c
 738 0209 1E020000 		.4byte	0x21e
 739 020d 0B       		.uleb128 0xb
 740 020e 8C000000 		.4byte	.LASF34
 741 0212 01       		.byte	0x1
 742 0213 B002     		.2byte	0x2b0
 743 0215 6B000000 		.4byte	0x6b
 744 0219 00000000 		.4byte	.LLST0
 745 021d 00       		.byte	0
 746 021e 07       		.uleb128 0x7
 747 021f 45000000 		.4byte	.LASF35
 748 0223 01       		.byte	0x1
 749 0224 FB02     		.2byte	0x2fb
 750 0226 00000000 		.4byte	.LFB15
 751 022a 14000000 		.4byte	.LFE15-.LFB15
 752 022e 01       		.uleb128 0x1
 753 022f 9C       		.byte	0x9c
 754 0230 47020000 		.4byte	0x247
 755 0234 0C       		.uleb128 0xc
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 28


 756 0235 08000000 		.4byte	.LVL7
 757 0239 A6010000 		.4byte	0x1a6
 758 023d 0C       		.uleb128 0xc
 759 023e 0C000000 		.4byte	.LVL8
 760 0242 1A010000 		.4byte	0x11a
 761 0246 00       		.byte	0
 762 0247 0D       		.uleb128 0xd
 763 0248 44010000 		.4byte	.LASF36
 764 024c 01       		.byte	0x1
 765 024d 2B       		.byte	0x2b
 766 024e 00000000 		.4byte	.LFB0
 767 0252 3C000000 		.4byte	.LFE0-.LFB0
 768 0256 01       		.uleb128 0x1
 769 0257 9C       		.byte	0x9c
 770 0258 D1020000 		.4byte	0x2d1
 771 025c 0E       		.uleb128 0xe
 772 025d B9030000 		.4byte	.LASF41
 773 0261 01       		.byte	0x1
 774 0262 2F       		.byte	0x2f
 775 0263 6B000000 		.4byte	0x6b
 776 0267 1E000000 		.4byte	.LLST1
 777 026b 0F       		.uleb128 0xf
 778 026c 0A000000 		.4byte	.LVL9
 779 0270 81010000 		.4byte	0x181
 780 0274 7F020000 		.4byte	0x27f
 781 0278 10       		.uleb128 0x10
 782 0279 01       		.uleb128 0x1
 783 027a 50       		.byte	0x50
 784 027b 02       		.uleb128 0x2
 785 027c 09       		.byte	0x9
 786 027d FF       		.byte	0xff
 787 027e 00       		.byte	0
 788 027f 0F       		.uleb128 0xf
 789 0280 12000000 		.4byte	.LVL10
 790 0284 BC010000 		.4byte	0x1bc
 791 0288 93020000 		.4byte	0x293
 792 028c 10       		.uleb128 0x10
 793 028d 01       		.uleb128 0x1
 794 028e 50       		.byte	0x50
 795 028f 02       		.uleb128 0x2
 796 0290 09       		.byte	0x9
 797 0291 FF       		.byte	0xff
 798 0292 00       		.byte	0
 799 0293 0C       		.uleb128 0xc
 800 0294 16000000 		.4byte	.LVL11
 801 0298 0A030000 		.4byte	0x30a
 802 029c 0C       		.uleb128 0xc
 803 029d 24000000 		.4byte	.LVL12
 804 02a1 15030000 		.4byte	0x315
 805 02a5 0F       		.uleb128 0xf
 806 02a6 2A000000 		.4byte	.LVL13
 807 02aa F7010000 		.4byte	0x1f7
 808 02ae B8020000 		.4byte	0x2b8
 809 02b2 10       		.uleb128 0x10
 810 02b3 01       		.uleb128 0x1
 811 02b4 50       		.byte	0x50
 812 02b5 01       		.uleb128 0x1
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 29


 813 02b6 30       		.byte	0x30
 814 02b7 00       		.byte	0
 815 02b8 0C       		.uleb128 0xc
 816 02b9 2E000000 		.4byte	.LVL14
 817 02bd 1E020000 		.4byte	0x21e
 818 02c1 11       		.uleb128 0x11
 819 02c2 34000000 		.4byte	.LVL15
 820 02c6 E3000000 		.4byte	0xe3
 821 02ca 10       		.uleb128 0x10
 822 02cb 01       		.uleb128 0x1
 823 02cc 50       		.byte	0x50
 824 02cd 01       		.uleb128 0x1
 825 02ce 32       		.byte	0x32
 826 02cf 00       		.byte	0
 827 02d0 00       		.byte	0
 828 02d1 0D       		.uleb128 0xd
 829 02d2 BE020000 		.4byte	.LASF37
 830 02d6 01       		.byte	0x1
 831 02d7 D7       		.byte	0xd7
 832 02d8 00000000 		.4byte	.LFB2
 833 02dc 1C000000 		.4byte	.LFE2-.LFB2
 834 02e0 01       		.uleb128 0x1
 835 02e1 9C       		.byte	0x9c
 836 02e2 F9020000 		.4byte	0x2f9
 837 02e6 0C       		.uleb128 0xc
 838 02e7 0C000000 		.4byte	.LVL16
 839 02eb 47020000 		.4byte	0x247
 840 02ef 0C       		.uleb128 0xc
 841 02f0 16000000 		.4byte	.LVL17
 842 02f4 C1000000 		.4byte	0xc1
 843 02f8 00       		.byte	0
 844 02f9 12       		.uleb128 0x12
 845 02fa 5D010000 		.4byte	.LASF42
 846 02fe 01       		.byte	0x1
 847 02ff 1A       		.byte	0x1a
 848 0300 6B000000 		.4byte	0x6b
 849 0304 05       		.uleb128 0x5
 850 0305 03       		.byte	0x3
 851 0306 00000000 		.4byte	Timer_Channel_Right_initVar
 852 030a 13       		.uleb128 0x13
 853 030b 84020000 		.4byte	.LASF43
 854 030f 03       		.byte	0x3
 855 0310 7D       		.byte	0x7d
 856 0311 6B000000 		.4byte	0x6b
 857 0315 14       		.uleb128 0x14
 858 0316 A8020000 		.4byte	.LASF44
 859 031a 03       		.byte	0x3
 860 031b 7E       		.byte	0x7e
 861 031c 15       		.uleb128 0x15
 862 031d 6B000000 		.4byte	0x6b
 863 0321 00       		.byte	0
 864 0322 00       		.byte	0
 865              		.section	.debug_abbrev,"",%progbits
 866              	.Ldebug_abbrev0:
 867 0000 01       		.uleb128 0x1
 868 0001 11       		.uleb128 0x11
 869 0002 01       		.byte	0x1
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 30


 870 0003 25       		.uleb128 0x25
 871 0004 0E       		.uleb128 0xe
 872 0005 13       		.uleb128 0x13
 873 0006 0B       		.uleb128 0xb
 874 0007 03       		.uleb128 0x3
 875 0008 0E       		.uleb128 0xe
 876 0009 1B       		.uleb128 0x1b
 877 000a 0E       		.uleb128 0xe
 878 000b 55       		.uleb128 0x55
 879 000c 17       		.uleb128 0x17
 880 000d 11       		.uleb128 0x11
 881 000e 01       		.uleb128 0x1
 882 000f 10       		.uleb128 0x10
 883 0010 17       		.uleb128 0x17
 884 0011 00       		.byte	0
 885 0012 00       		.byte	0
 886 0013 02       		.uleb128 0x2
 887 0014 24       		.uleb128 0x24
 888 0015 00       		.byte	0
 889 0016 0B       		.uleb128 0xb
 890 0017 0B       		.uleb128 0xb
 891 0018 3E       		.uleb128 0x3e
 892 0019 0B       		.uleb128 0xb
 893 001a 03       		.uleb128 0x3
 894 001b 0E       		.uleb128 0xe
 895 001c 00       		.byte	0
 896 001d 00       		.byte	0
 897 001e 03       		.uleb128 0x3
 898 001f 24       		.uleb128 0x24
 899 0020 00       		.byte	0
 900 0021 0B       		.uleb128 0xb
 901 0022 0B       		.uleb128 0xb
 902 0023 3E       		.uleb128 0x3e
 903 0024 0B       		.uleb128 0xb
 904 0025 03       		.uleb128 0x3
 905 0026 08       		.uleb128 0x8
 906 0027 00       		.byte	0
 907 0028 00       		.byte	0
 908 0029 04       		.uleb128 0x4
 909 002a 16       		.uleb128 0x16
 910 002b 00       		.byte	0
 911 002c 03       		.uleb128 0x3
 912 002d 0E       		.uleb128 0xe
 913 002e 3A       		.uleb128 0x3a
 914 002f 0B       		.uleb128 0xb
 915 0030 3B       		.uleb128 0x3b
 916 0031 05       		.uleb128 0x5
 917 0032 49       		.uleb128 0x49
 918 0033 13       		.uleb128 0x13
 919 0034 00       		.byte	0
 920 0035 00       		.byte	0
 921 0036 05       		.uleb128 0x5
 922 0037 35       		.uleb128 0x35
 923 0038 00       		.byte	0
 924 0039 49       		.uleb128 0x49
 925 003a 13       		.uleb128 0x13
 926 003b 00       		.byte	0
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 31


 927 003c 00       		.byte	0
 928 003d 06       		.uleb128 0x6
 929 003e 2E       		.uleb128 0x2e
 930 003f 00       		.byte	0
 931 0040 3F       		.uleb128 0x3f
 932 0041 19       		.uleb128 0x19
 933 0042 03       		.uleb128 0x3
 934 0043 0E       		.uleb128 0xe
 935 0044 3A       		.uleb128 0x3a
 936 0045 0B       		.uleb128 0xb
 937 0046 3B       		.uleb128 0x3b
 938 0047 0B       		.uleb128 0xb
 939 0048 27       		.uleb128 0x27
 940 0049 19       		.uleb128 0x19
 941 004a 11       		.uleb128 0x11
 942 004b 01       		.uleb128 0x1
 943 004c 12       		.uleb128 0x12
 944 004d 06       		.uleb128 0x6
 945 004e 40       		.uleb128 0x40
 946 004f 18       		.uleb128 0x18
 947 0050 9742     		.uleb128 0x2117
 948 0052 19       		.uleb128 0x19
 949 0053 00       		.byte	0
 950 0054 00       		.byte	0
 951 0055 07       		.uleb128 0x7
 952 0056 2E       		.uleb128 0x2e
 953 0057 01       		.byte	0x1
 954 0058 3F       		.uleb128 0x3f
 955 0059 19       		.uleb128 0x19
 956 005a 03       		.uleb128 0x3
 957 005b 0E       		.uleb128 0xe
 958 005c 3A       		.uleb128 0x3a
 959 005d 0B       		.uleb128 0xb
 960 005e 3B       		.uleb128 0x3b
 961 005f 05       		.uleb128 0x5
 962 0060 27       		.uleb128 0x27
 963 0061 19       		.uleb128 0x19
 964 0062 11       		.uleb128 0x11
 965 0063 01       		.uleb128 0x1
 966 0064 12       		.uleb128 0x12
 967 0065 06       		.uleb128 0x6
 968 0066 40       		.uleb128 0x40
 969 0067 18       		.uleb128 0x18
 970 0068 9742     		.uleb128 0x2117
 971 006a 19       		.uleb128 0x19
 972 006b 01       		.uleb128 0x1
 973 006c 13       		.uleb128 0x13
 974 006d 00       		.byte	0
 975 006e 00       		.byte	0
 976 006f 08       		.uleb128 0x8
 977 0070 05       		.uleb128 0x5
 978 0071 00       		.byte	0
 979 0072 03       		.uleb128 0x3
 980 0073 0E       		.uleb128 0xe
 981 0074 3A       		.uleb128 0x3a
 982 0075 0B       		.uleb128 0xb
 983 0076 3B       		.uleb128 0x3b
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 32


 984 0077 05       		.uleb128 0x5
 985 0078 49       		.uleb128 0x49
 986 0079 13       		.uleb128 0x13
 987 007a 02       		.uleb128 0x2
 988 007b 18       		.uleb128 0x18
 989 007c 00       		.byte	0
 990 007d 00       		.byte	0
 991 007e 09       		.uleb128 0x9
 992 007f 2E       		.uleb128 0x2e
 993 0080 00       		.byte	0
 994 0081 3F       		.uleb128 0x3f
 995 0082 19       		.uleb128 0x19
 996 0083 03       		.uleb128 0x3
 997 0084 0E       		.uleb128 0xe
 998 0085 3A       		.uleb128 0x3a
 999 0086 0B       		.uleb128 0xb
 1000 0087 3B       		.uleb128 0x3b
 1001 0088 05       		.uleb128 0x5
 1002 0089 27       		.uleb128 0x27
 1003 008a 19       		.uleb128 0x19
 1004 008b 11       		.uleb128 0x11
 1005 008c 01       		.uleb128 0x1
 1006 008d 12       		.uleb128 0x12
 1007 008e 06       		.uleb128 0x6
 1008 008f 40       		.uleb128 0x40
 1009 0090 18       		.uleb128 0x18
 1010 0091 9742     		.uleb128 0x2117
 1011 0093 19       		.uleb128 0x19
 1012 0094 00       		.byte	0
 1013 0095 00       		.byte	0
 1014 0096 0A       		.uleb128 0xa
 1015 0097 2E       		.uleb128 0x2e
 1016 0098 00       		.byte	0
 1017 0099 3F       		.uleb128 0x3f
 1018 009a 19       		.uleb128 0x19
 1019 009b 03       		.uleb128 0x3
 1020 009c 0E       		.uleb128 0xe
 1021 009d 3A       		.uleb128 0x3a
 1022 009e 0B       		.uleb128 0xb
 1023 009f 3B       		.uleb128 0x3b
 1024 00a0 05       		.uleb128 0x5
 1025 00a1 27       		.uleb128 0x27
 1026 00a2 19       		.uleb128 0x19
 1027 00a3 49       		.uleb128 0x49
 1028 00a4 13       		.uleb128 0x13
 1029 00a5 11       		.uleb128 0x11
 1030 00a6 01       		.uleb128 0x1
 1031 00a7 12       		.uleb128 0x12
 1032 00a8 06       		.uleb128 0x6
 1033 00a9 40       		.uleb128 0x40
 1034 00aa 18       		.uleb128 0x18
 1035 00ab 9742     		.uleb128 0x2117
 1036 00ad 19       		.uleb128 0x19
 1037 00ae 00       		.byte	0
 1038 00af 00       		.byte	0
 1039 00b0 0B       		.uleb128 0xb
 1040 00b1 05       		.uleb128 0x5
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 33


 1041 00b2 00       		.byte	0
 1042 00b3 03       		.uleb128 0x3
 1043 00b4 0E       		.uleb128 0xe
 1044 00b5 3A       		.uleb128 0x3a
 1045 00b6 0B       		.uleb128 0xb
 1046 00b7 3B       		.uleb128 0x3b
 1047 00b8 05       		.uleb128 0x5
 1048 00b9 49       		.uleb128 0x49
 1049 00ba 13       		.uleb128 0x13
 1050 00bb 02       		.uleb128 0x2
 1051 00bc 17       		.uleb128 0x17
 1052 00bd 00       		.byte	0
 1053 00be 00       		.byte	0
 1054 00bf 0C       		.uleb128 0xc
 1055 00c0 898201   		.uleb128 0x4109
 1056 00c3 00       		.byte	0
 1057 00c4 11       		.uleb128 0x11
 1058 00c5 01       		.uleb128 0x1
 1059 00c6 31       		.uleb128 0x31
 1060 00c7 13       		.uleb128 0x13
 1061 00c8 00       		.byte	0
 1062 00c9 00       		.byte	0
 1063 00ca 0D       		.uleb128 0xd
 1064 00cb 2E       		.uleb128 0x2e
 1065 00cc 01       		.byte	0x1
 1066 00cd 3F       		.uleb128 0x3f
 1067 00ce 19       		.uleb128 0x19
 1068 00cf 03       		.uleb128 0x3
 1069 00d0 0E       		.uleb128 0xe
 1070 00d1 3A       		.uleb128 0x3a
 1071 00d2 0B       		.uleb128 0xb
 1072 00d3 3B       		.uleb128 0x3b
 1073 00d4 0B       		.uleb128 0xb
 1074 00d5 27       		.uleb128 0x27
 1075 00d6 19       		.uleb128 0x19
 1076 00d7 11       		.uleb128 0x11
 1077 00d8 01       		.uleb128 0x1
 1078 00d9 12       		.uleb128 0x12
 1079 00da 06       		.uleb128 0x6
 1080 00db 40       		.uleb128 0x40
 1081 00dc 18       		.uleb128 0x18
 1082 00dd 9742     		.uleb128 0x2117
 1083 00df 19       		.uleb128 0x19
 1084 00e0 01       		.uleb128 0x1
 1085 00e1 13       		.uleb128 0x13
 1086 00e2 00       		.byte	0
 1087 00e3 00       		.byte	0
 1088 00e4 0E       		.uleb128 0xe
 1089 00e5 34       		.uleb128 0x34
 1090 00e6 00       		.byte	0
 1091 00e7 03       		.uleb128 0x3
 1092 00e8 0E       		.uleb128 0xe
 1093 00e9 3A       		.uleb128 0x3a
 1094 00ea 0B       		.uleb128 0xb
 1095 00eb 3B       		.uleb128 0x3b
 1096 00ec 0B       		.uleb128 0xb
 1097 00ed 49       		.uleb128 0x49
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 34


 1098 00ee 13       		.uleb128 0x13
 1099 00ef 02       		.uleb128 0x2
 1100 00f0 17       		.uleb128 0x17
 1101 00f1 00       		.byte	0
 1102 00f2 00       		.byte	0
 1103 00f3 0F       		.uleb128 0xf
 1104 00f4 898201   		.uleb128 0x4109
 1105 00f7 01       		.byte	0x1
 1106 00f8 11       		.uleb128 0x11
 1107 00f9 01       		.uleb128 0x1
 1108 00fa 31       		.uleb128 0x31
 1109 00fb 13       		.uleb128 0x13
 1110 00fc 01       		.uleb128 0x1
 1111 00fd 13       		.uleb128 0x13
 1112 00fe 00       		.byte	0
 1113 00ff 00       		.byte	0
 1114 0100 10       		.uleb128 0x10
 1115 0101 8A8201   		.uleb128 0x410a
 1116 0104 00       		.byte	0
 1117 0105 02       		.uleb128 0x2
 1118 0106 18       		.uleb128 0x18
 1119 0107 9142     		.uleb128 0x2111
 1120 0109 18       		.uleb128 0x18
 1121 010a 00       		.byte	0
 1122 010b 00       		.byte	0
 1123 010c 11       		.uleb128 0x11
 1124 010d 898201   		.uleb128 0x4109
 1125 0110 01       		.byte	0x1
 1126 0111 11       		.uleb128 0x11
 1127 0112 01       		.uleb128 0x1
 1128 0113 31       		.uleb128 0x31
 1129 0114 13       		.uleb128 0x13
 1130 0115 00       		.byte	0
 1131 0116 00       		.byte	0
 1132 0117 12       		.uleb128 0x12
 1133 0118 34       		.uleb128 0x34
 1134 0119 00       		.byte	0
 1135 011a 03       		.uleb128 0x3
 1136 011b 0E       		.uleb128 0xe
 1137 011c 3A       		.uleb128 0x3a
 1138 011d 0B       		.uleb128 0xb
 1139 011e 3B       		.uleb128 0x3b
 1140 011f 0B       		.uleb128 0xb
 1141 0120 49       		.uleb128 0x49
 1142 0121 13       		.uleb128 0x13
 1143 0122 3F       		.uleb128 0x3f
 1144 0123 19       		.uleb128 0x19
 1145 0124 02       		.uleb128 0x2
 1146 0125 18       		.uleb128 0x18
 1147 0126 00       		.byte	0
 1148 0127 00       		.byte	0
 1149 0128 13       		.uleb128 0x13
 1150 0129 2E       		.uleb128 0x2e
 1151 012a 00       		.byte	0
 1152 012b 3F       		.uleb128 0x3f
 1153 012c 19       		.uleb128 0x19
 1154 012d 03       		.uleb128 0x3
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 35


 1155 012e 0E       		.uleb128 0xe
 1156 012f 3A       		.uleb128 0x3a
 1157 0130 0B       		.uleb128 0xb
 1158 0131 3B       		.uleb128 0x3b
 1159 0132 0B       		.uleb128 0xb
 1160 0133 27       		.uleb128 0x27
 1161 0134 19       		.uleb128 0x19
 1162 0135 49       		.uleb128 0x49
 1163 0136 13       		.uleb128 0x13
 1164 0137 3C       		.uleb128 0x3c
 1165 0138 19       		.uleb128 0x19
 1166 0139 00       		.byte	0
 1167 013a 00       		.byte	0
 1168 013b 14       		.uleb128 0x14
 1169 013c 2E       		.uleb128 0x2e
 1170 013d 01       		.byte	0x1
 1171 013e 3F       		.uleb128 0x3f
 1172 013f 19       		.uleb128 0x19
 1173 0140 03       		.uleb128 0x3
 1174 0141 0E       		.uleb128 0xe
 1175 0142 3A       		.uleb128 0x3a
 1176 0143 0B       		.uleb128 0xb
 1177 0144 3B       		.uleb128 0x3b
 1178 0145 0B       		.uleb128 0xb
 1179 0146 27       		.uleb128 0x27
 1180 0147 19       		.uleb128 0x19
 1181 0148 3C       		.uleb128 0x3c
 1182 0149 19       		.uleb128 0x19
 1183 014a 00       		.byte	0
 1184 014b 00       		.byte	0
 1185 014c 15       		.uleb128 0x15
 1186 014d 05       		.uleb128 0x5
 1187 014e 00       		.byte	0
 1188 014f 49       		.uleb128 0x49
 1189 0150 13       		.uleb128 0x13
 1190 0151 00       		.byte	0
 1191 0152 00       		.byte	0
 1192 0153 00       		.byte	0
 1193              		.section	.debug_loc,"",%progbits
 1194              	.Ldebug_loc0:
 1195              	.LLST0:
 1196 0000 00000000 		.4byte	.LVL4
 1197 0004 04000000 		.4byte	.LVL5
 1198 0008 0100     		.2byte	0x1
 1199 000a 50       		.byte	0x50
 1200 000b 04000000 		.4byte	.LVL5
 1201 000f 12000000 		.4byte	.LVL6
 1202 0013 0100     		.2byte	0x1
 1203 0015 50       		.byte	0x50
 1204 0016 00000000 		.4byte	0
 1205 001a 00000000 		.4byte	0
 1206              	.LLST1:
 1207 001e 16000000 		.4byte	.LVL11
 1208 0022 23000000 		.4byte	.LVL12-1
 1209 0026 0100     		.2byte	0x1
 1210 0028 50       		.byte	0x50
 1211 0029 00000000 		.4byte	0
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 36


 1212 002d 00000000 		.4byte	0
 1213              		.section	.debug_aranges,"",%progbits
 1214 0000 94000000 		.4byte	0x94
 1215 0004 0200     		.2byte	0x2
 1216 0006 00000000 		.4byte	.Ldebug_info0
 1217 000a 04       		.byte	0x4
 1218 000b 00       		.byte	0
 1219 000c 0000     		.2byte	0
 1220 000e 0000     		.2byte	0
 1221 0010 00000000 		.4byte	.LFB1
 1222 0014 10000000 		.4byte	.LFE1-.LFB1
 1223 0018 00000000 		.4byte	.LFB3
 1224 001c 10000000 		.4byte	.LFE3-.LFB3
 1225 0020 00000000 		.4byte	.LFB4
 1226 0024 0C000000 		.4byte	.LFE4-.LFB4
 1227 0028 00000000 		.4byte	.LFB5
 1228 002c 0C000000 		.4byte	.LFE5-.LFB5
 1229 0030 00000000 		.4byte	.LFB6
 1230 0034 0C000000 		.4byte	.LFE6-.LFB6
 1231 0038 00000000 		.4byte	.LFB7
 1232 003c 0C000000 		.4byte	.LFE7-.LFB7
 1233 0040 00000000 		.4byte	.LFB8
 1234 0044 0C000000 		.4byte	.LFE8-.LFB8
 1235 0048 00000000 		.4byte	.LFB9
 1236 004c 0C000000 		.4byte	.LFE9-.LFB9
 1237 0050 00000000 		.4byte	.LFB10
 1238 0054 0C000000 		.4byte	.LFE10-.LFB10
 1239 0058 00000000 		.4byte	.LFB11
 1240 005c 0C000000 		.4byte	.LFE11-.LFB11
 1241 0060 00000000 		.4byte	.LFB12
 1242 0064 0C000000 		.4byte	.LFE12-.LFB12
 1243 0068 00000000 		.4byte	.LFB13
 1244 006c 14000000 		.4byte	.LFE13-.LFB13
 1245 0070 00000000 		.4byte	.LFB14
 1246 0074 1C000000 		.4byte	.LFE14-.LFB14
 1247 0078 00000000 		.4byte	.LFB15
 1248 007c 14000000 		.4byte	.LFE15-.LFB15
 1249 0080 00000000 		.4byte	.LFB0
 1250 0084 3C000000 		.4byte	.LFE0-.LFB0
 1251 0088 00000000 		.4byte	.LFB2
 1252 008c 1C000000 		.4byte	.LFE2-.LFB2
 1253 0090 00000000 		.4byte	0
 1254 0094 00000000 		.4byte	0
 1255              		.section	.debug_ranges,"",%progbits
 1256              	.Ldebug_ranges0:
 1257 0000 00000000 		.4byte	.LFB1
 1258 0004 10000000 		.4byte	.LFE1
 1259 0008 00000000 		.4byte	.LFB3
 1260 000c 10000000 		.4byte	.LFE3
 1261 0010 00000000 		.4byte	.LFB4
 1262 0014 0C000000 		.4byte	.LFE4
 1263 0018 00000000 		.4byte	.LFB5
 1264 001c 0C000000 		.4byte	.LFE5
 1265 0020 00000000 		.4byte	.LFB6
 1266 0024 0C000000 		.4byte	.LFE6
 1267 0028 00000000 		.4byte	.LFB7
 1268 002c 0C000000 		.4byte	.LFE7
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 37


 1269 0030 00000000 		.4byte	.LFB8
 1270 0034 0C000000 		.4byte	.LFE8
 1271 0038 00000000 		.4byte	.LFB9
 1272 003c 0C000000 		.4byte	.LFE9
 1273 0040 00000000 		.4byte	.LFB10
 1274 0044 0C000000 		.4byte	.LFE10
 1275 0048 00000000 		.4byte	.LFB11
 1276 004c 0C000000 		.4byte	.LFE11
 1277 0050 00000000 		.4byte	.LFB12
 1278 0054 0C000000 		.4byte	.LFE12
 1279 0058 00000000 		.4byte	.LFB13
 1280 005c 14000000 		.4byte	.LFE13
 1281 0060 00000000 		.4byte	.LFB14
 1282 0064 1C000000 		.4byte	.LFE14
 1283 0068 00000000 		.4byte	.LFB15
 1284 006c 14000000 		.4byte	.LFE15
 1285 0070 00000000 		.4byte	.LFB0
 1286 0074 3C000000 		.4byte	.LFE0
 1287 0078 00000000 		.4byte	.LFB2
 1288 007c 1C000000 		.4byte	.LFE2
 1289 0080 00000000 		.4byte	0
 1290 0084 00000000 		.4byte	0
 1291              		.section	.debug_line,"",%progbits
 1292              	.Ldebug_line0:
 1293 0000 8C010000 		.section	.debug_str,"MS",%progbits,1
 1293      02005B00 
 1293      00000201 
 1293      FB0E0D00 
 1293      01010101 
 1294              	.LASF15:
 1295 0000 72656731 		.ascii	"reg16\000"
 1295      3600
 1296              	.LASF28:
 1297 0006 70657269 		.ascii	"period\000"
 1297      6F6400
 1298              	.LASF3:
 1299 000d 73686F72 		.ascii	"short unsigned int\000"
 1299      7420756E 
 1299      7369676E 
 1299      65642069 
 1299      6E7400
 1300              	.LASF22:
 1301 0020 54696D65 		.ascii	"Timer_Channel_Right_SetInterruptMode\000"
 1301      725F4368 
 1301      616E6E65 
 1301      6C5F5269 
 1301      6768745F 
 1302              	.LASF35:
 1303 0045 54696D65 		.ascii	"Timer_Channel_Right_ClearFIFO\000"
 1303      725F4368 
 1303      616E6E65 
 1303      6C5F5269 
 1303      6768745F 
 1304              	.LASF23:
 1305 0063 54696D65 		.ascii	"Timer_Channel_Right_WriteControlRegister\000"
 1305      725F4368 
 1305      616E6E65 
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 38


 1305      6C5F5269 
 1305      6768745F 
 1306              	.LASF34:
 1307 008c 696E7465 		.ascii	"interruptCount\000"
 1307      72727570 
 1307      74436F75 
 1307      6E7400
 1308              	.LASF11:
 1309 009b 666C6F61 		.ascii	"float\000"
 1309      7400
 1310              	.LASF31:
 1311 00a1 636F756E 		.ascii	"counter\000"
 1311      74657200 
 1312              	.LASF7:
 1313 00a9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1313      206C6F6E 
 1313      6720756E 
 1313      7369676E 
 1313      65642069 
 1314              	.LASF19:
 1315 00c0 54696D65 		.ascii	"Timer_Channel_Right_SoftwareCapture\000"
 1315      725F4368 
 1315      616E6E65 
 1315      6C5F5269 
 1315      6768745F 
 1316              	.LASF39:
 1317 00e4 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer_Channel_Right.c\000"
 1317      72617465 
 1317      645F536F 
 1317      75726365 
 1317      5C50536F 
 1318              	.LASF1:
 1319 0111 756E7369 		.ascii	"unsigned char\000"
 1319      676E6564 
 1319      20636861 
 1319      7200
 1320              	.LASF14:
 1321 011f 72656738 		.ascii	"reg8\000"
 1321      00
 1322              	.LASF5:
 1323 0124 6C6F6E67 		.ascii	"long unsigned int\000"
 1323      20756E73 
 1323      69676E65 
 1323      6420696E 
 1323      7400
 1324              	.LASF9:
 1325 0136 75696E74 		.ascii	"uint8\000"
 1325      3800
 1326              	.LASF25:
 1327 013c 636F6E74 		.ascii	"control\000"
 1327      726F6C00 
 1328              	.LASF36:
 1329 0144 54696D65 		.ascii	"Timer_Channel_Right_Init\000"
 1329      725F4368 
 1329      616E6E65 
 1329      6C5F5269 
 1329      6768745F 
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 39


 1330              	.LASF42:
 1331 015d 54696D65 		.ascii	"Timer_Channel_Right_initVar\000"
 1331      725F4368 
 1331      616E6E65 
 1331      6C5F5269 
 1331      6768745F 
 1332              	.LASF20:
 1333 0179 54696D65 		.ascii	"Timer_Channel_Right_ReadStatusRegister\000"
 1333      725F4368 
 1333      616E6E65 
 1333      6C5F5269 
 1333      6768745F 
 1334              	.LASF12:
 1335 01a0 646F7562 		.ascii	"double\000"
 1335      6C6500
 1336              	.LASF29:
 1337 01a7 54696D65 		.ascii	"Timer_Channel_Right_ReadCapture\000"
 1337      725F4368 
 1337      616E6E65 
 1337      6C5F5269 
 1337      6768745F 
 1338              	.LASF10:
 1339 01c7 75696E74 		.ascii	"uint16\000"
 1339      313600
 1340              	.LASF21:
 1341 01ce 54696D65 		.ascii	"Timer_Channel_Right_ReadControlRegister\000"
 1341      725F4368 
 1341      616E6E65 
 1341      6C5F5269 
 1341      6768745F 
 1342              	.LASF38:
 1343 01f6 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1343      4320342E 
 1343      392E3320 
 1343      32303135 
 1343      30333033 
 1344 0229 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1344      20726576 
 1344      6973696F 
 1344      6E203232 
 1344      31323230 
 1345 025c 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1345      66756E63 
 1345      74696F6E 
 1345      2D736563 
 1345      74696F6E 
 1346              	.LASF43:
 1347 0284 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1347      74657243 
 1347      72697469 
 1347      63616C53 
 1347      65637469 
 1348              	.LASF8:
 1349 029b 756E7369 		.ascii	"unsigned int\000"
 1349      676E6564 
 1349      20696E74 
 1349      00
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 40


 1350              	.LASF44:
 1351 02a8 43794578 		.ascii	"CyExitCriticalSection\000"
 1351      69744372 
 1351      69746963 
 1351      616C5365 
 1351      6374696F 
 1352              	.LASF37:
 1353 02be 54696D65 		.ascii	"Timer_Channel_Right_Start\000"
 1353      725F4368 
 1353      616E6E65 
 1353      6C5F5269 
 1353      6768745F 
 1354              	.LASF40:
 1355 02d8 433A5C55 		.ascii	"C:\\Users\\Ryan Kelley\\Documents\\CMPEN480\\PSoC F"
 1355      73657273 
 1355      5C527961 
 1355      6E204B65 
 1355      6C6C6579 
 1356 0306 69726D65 		.ascii	"irmestware\\Platform Control Firmware.cydsn\000"
 1356      73747761 
 1356      72655C50 
 1356      6C617466 
 1356      6F726D20 
 1357              	.LASF16:
 1358 0331 73697A65 		.ascii	"sizetype\000"
 1358      74797065 
 1358      00
 1359              	.LASF26:
 1360 033a 54696D65 		.ascii	"Timer_Channel_Right_ReadPeriod\000"
 1360      725F4368 
 1360      616E6E65 
 1360      6C5F5269 
 1360      6768745F 
 1361              	.LASF6:
 1362 0359 6C6F6E67 		.ascii	"long long int\000"
 1362      206C6F6E 
 1362      6720696E 
 1362      7400
 1363              	.LASF18:
 1364 0367 54696D65 		.ascii	"Timer_Channel_Right_Stop\000"
 1364      725F4368 
 1364      616E6E65 
 1364      6C5F5269 
 1364      6768745F 
 1365              	.LASF24:
 1366 0380 696E7465 		.ascii	"interruptMode\000"
 1366      72727570 
 1366      744D6F64 
 1366      6500
 1367              	.LASF2:
 1368 038e 73686F72 		.ascii	"short int\000"
 1368      7420696E 
 1368      7400
 1369              	.LASF30:
 1370 0398 54696D65 		.ascii	"Timer_Channel_Right_WriteCounter\000"
 1370      725F4368 
 1370      616E6E65 
ARM GAS  C:\Users\RYANKE~1\AppData\Local\Temp\ccnoZxp4.s 			page 41


 1370      6C5F5269 
 1370      6768745F 
 1371              	.LASF41:
 1372 03b9 54696D65 		.ascii	"Timer_Channel_Right_interruptState\000"
 1372      725F4368 
 1372      616E6E65 
 1372      6C5F5269 
 1372      6768745F 
 1373              	.LASF4:
 1374 03dc 6C6F6E67 		.ascii	"long int\000"
 1374      20696E74 
 1374      00
 1375              	.LASF13:
 1376 03e5 63686172 		.ascii	"char\000"
 1376      00
 1377              	.LASF0:
 1378 03ea 7369676E 		.ascii	"signed char\000"
 1378      65642063 
 1378      68617200 
 1379              	.LASF33:
 1380 03f6 54696D65 		.ascii	"Timer_Channel_Right_SetInterruptCount\000"
 1380      725F4368 
 1380      616E6E65 
 1380      6C5F5269 
 1380      6768745F 
 1381              	.LASF32:
 1382 041c 54696D65 		.ascii	"Timer_Channel_Right_ReadCounter\000"
 1382      725F4368 
 1382      616E6E65 
 1382      6C5F5269 
 1382      6768745F 
 1383              	.LASF17:
 1384 043c 54696D65 		.ascii	"Timer_Channel_Right_Enable\000"
 1384      725F4368 
 1384      616E6E65 
 1384      6C5F5269 
 1384      6768745F 
 1385              	.LASF27:
 1386 0457 54696D65 		.ascii	"Timer_Channel_Right_WritePeriod\000"
 1386      725F4368 
 1386      616E6E65 
 1386      6C5F5269 
 1386      6768745F 
 1387              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
